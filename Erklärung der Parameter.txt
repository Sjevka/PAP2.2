1. eigene Messdaten verwenden

2. Variablen könnt ihr ändern, solange ihr ALLE Instanzen umbennent. Mache Variablen haben verschiedene Namen, haben aber die gleichen Werte. Trotzdem unterscheiden!

2. Die Fitfunktion lautet immer in der Form:
def reg(p, x):
	a, b, c, d = f
	return a*x*x+b*x+c/d

alle Parameter von der Fitfunktion sind in Tupel p enthalten.
n-ter Parameter wird am Ende in popt[n-1] gespeichert:
a_opt=popt[o]
b_opt=popt[1]
...


x 
ist eure unabhängige Variabel x

y 
die abhängige y(x)

delta_x
Fehler von x

delta_y
Fehler von y(x)

start
ab welchem Element der Menge sollen Daten eingelesen werden

cut
wieviele Element der Menge sollen am Ende ausgelassen werden

nstd
Welche Sigma-Umgebung soll um die Fitfunktion eingezeichnet werden (1, 2, 3, 4.5......)

plt.savefig("figures/243_Diagramm3.pdf", format="pdf") 
das Diagram wird im Unterordner "figures" gespeichert

f, U_aus = np.loadtxt('data/Messung_243.txt', skiprows=1, usecols=(0,1), unpack=True)
Lest Daten aus Datei im Unterordner "data" ein

x_fit = np.linspace(min(x)/1.1, max(x)*1.1, 1000)
Intervall auf dem die Fitfunktion geplotet werden soll, und mit wievielen Berechnungschritten



